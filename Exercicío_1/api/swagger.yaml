---
swagger: "2.0"
info:
  description: "Este é um servidor simples para hospedar informações de uma Livraria\n"
  version: "1.0.0"
  title: "API para Livraria"
  contact:
    name: "Luiz Carlos dos Santos"
    email: "luizcsbh@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/Luiz-Dev/Livraria/1.0.0"
tags:
- name: "book"
  description: "Tudo sobre Livros"
- name: "publisher"
  description: "Dados da Editora"
- name: "category"
  description: "Categoria de livros da Livraria"
- name: "authors"
  description: "Dados do Autor(es) do Livro"
- name: "user"
  description: "Dados dos Usuários"
- name: "order"
  description: "Dados dos Pedidos"
- name: "comment"
  description: "Resenhas sobre o Livro"
- name: "cart"
  description: "Carrinhos de Compras"
- name: "payment"
  description: "Pagamento das compras"   
- name: "apiresponse"
  description: "API"
schemes:
- "https"
- "http"
paths:
  /books:
    post:
      tags:
      - "books"
      summary: "Adicionar um livro na livraria"
      description: "Adicionar um livro sistema"
      operationId: "AddLivros"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "ItemInventario"
        description: "Adicionando item"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        201:
          description: "Item adicionado"
        400:
          description: "entrada inválida, objeto inválido"
        405:
          description: "Entrada inválida"
        409:
          description: "já existe um item"
      x-swagger-router-controller: "Books"
    put:
      tags:
      - "books"
      summary: "Atualização de um livro existente"
      operationId: "updateBook"
      consumes:
      - "aplication/json"
      - "application/xml"
      produces:
      - "aplication/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "Corpo"
        description: "Objeto livros precisa ser adicionado na Livraria"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        400:
          description: "ID inválido fornecido"
        404:
          description: "Livro não encontrado"
        405:
          description: "Exceção de validação"
      x-swagger-router-controller: "Books"
  /books/{isbn}:
    get:
      tags:
      - "books"
      summary: "Encontrar um livro pelo ISBN"
      description: "Retorna um único livro"
      operationId: "getBookByIsbn"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "isbn"
        in: "path"
        description: "Informa ISBN do livro"
        required: true
        type: "string"
      responses:
        200:
          description: "Operação bem sucedida"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "ISBN inválido fornecido"
        404:
          description: "Livro não encontrado"
      x-swagger-router-controller: "Books"
    post:
      tags:
      - "books"
      summary: "Atualiza um livro da Livraria com os dados do formulário"
      operationId: "updateBookWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "isbn"
        in: "path"
        description: "ISBN do Livro que precisa ser atualizado"
        required: true
        type: "string"
        format: "isbn-10"
      - name: "Título"
        in: "formData"
        description: "Atualização do Título do Livro"
        required: false
        type: "string"
      - name: "idioma"
        in: "formData"
        description: "Atualização do Idioma do Livro"
        required: false
        type: "string"
      responses:
        405:
          description: "Entrada inválida"
      x-swagger-router-controller: "Books"
    delete:
      tags:
      - "books"
      summary: "Apagar um Livro"
      operationId: "deletePet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "chave"
        in: "header"
        required: false
        type: "string"
      - name: "isbn"
        in: "path"
        description: "Livro apagado"
        required: true
        type: "string"
      responses:
        400:
          description: "ISBN"
        404:
          description: "Livro não encontrado"
      x-swagger-router-controller: "Books"
definitions:
  Book:
    type: "object"
    required:
    - "isbn"
    properties:
      isbn:
        type: "string"
        format: "isbn-10"
        example: "8576089343"
      título:
        type: "string"
        example: "Introdução a ciência de dados"
      idioma:
        type: "string"
        example: "Português"
      datapublicacao:
        type: "string"
        format: "date"
        example: "20-06-2016"
      numpaginas:
        type: "integer"
        format: "int32"
        example: 320
      price:
        type: "string"
        format: "int32"
        example: "R$ 59,90"
      editora:
        $ref: "#/definitions/Publisher"
      categoria:
        $ref: "#/definitions/Category"
    example:
      numpaginas: 320
      isbn: "8576089343"
      título: "Introdução a ciência de dados"
      idioma: "Português"
      datapublicacao: "20-06-2016"
      editora:
        editoraid: 0
        name: "Alta Books"
        authors:
          nome: "Fenando Amaral"
          authorid: 6
      categoria:
        categoryid: 1
        categorynome: "Voltas Aulas"
  Category:
    type: "object"
    required:
    - "categoryid"
    properties:
      categoryid:
        type: "integer"
        format: "int32"
      categorynome:
        type: "string"
      
  Publisher:
    type: "object"
    required:
    - "publisherid"
    properties:
      publisherid:
        type: "integer"
        format: "int32"
      name:
        type: "string"
        example: "Alta Books"
      authors:
        $ref: "#/definitions/Authors"
    example:
      editoraid: 0
      name: "Alta Books"
      authors:
        nome: "Fenando Amaral"
        authorid: 6
  Authors:
    type: "object"
    required:
    - "authorid"
    properties:
      authorid:
        type: "integer"
        format: "int32"
      nome:
        type: "string"
        example: "Fenando Amaral"
    example:
      nome: "Fenando Amaral"
      authorid: 6
  User:
    type: "object"
    required:
    - "userid"
    properties:
      userid:
        type: "integer"
        format: "int32"
      nome:
        type: "string"
      genero:
        type: "string"
      endereco:
        type: "string"
      cidade:
        type: "string"
      estado:
        type: "string"
      cep:
        type: "integer"
        format: "int32"
    example:
      userdi: 5
      nome: "José da Silva"
      genero: "Masculino"
      endereco: "Avenida  Washington Luiz, 430  São Bernardo"
      cidadde: "Belo Horizonte"
      estado: "Minas Gerais"
      cep: "31270705" 
  Order:
    type: "object"
    required:
    - "userid"
    - "isbn"
    properties:
      orderid:
        type: "integer"
        format: "int64"
      quantitade:
        type: "integer"
        format: "int32"
      dataEntrega:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Status da Encomenda"
        enum:
        - "colocar"
        - "aprovado"
        - "entregue"
      complete:
        type: "boolean"
        default: false
      user:
        $ref: "#/definitions/User"
      isbn:
        $ref: "#/definitions/Book"
    xml:
      name: "Encomendar"
  Comment:
    type: "object"
    required:
    - "isbn"
    - "userid"
    properties:
      descricao:
        type: "string"
      user:
        $ref: "#/definitions/User"
      isbn:
        $ref: "#/definitions/Book"
  Cart:
    type: "object"
    required:
    - "userid"
    - "isbn"
    - "orderid"
    - "pagamentoid"
    properties:
      cartid:
        type: "integer"
        format: "int32"
      quantidade:
        type: "integer"
        format: "int32"
      subtotal:
        type: "string"
      user:
        $ref: "#/definitions/User"
      isbn:
        $ref: "#/definitions/Book"
      orderid:
        $ref: "#/definitions/Order"
      pagamento:
        $ref: "#/definitions/Payment"  
  Payment:
    type: "object"
    properties:
      pagamentoid:
        type: "integer"
        format: "int32"
      tipopagamento:
        type: "string"
      valor:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
    
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"